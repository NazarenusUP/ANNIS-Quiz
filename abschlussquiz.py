# -*- coding: utf-8 -*-
"""Abschlussquiz.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lUZMeosJIgEK7Pr0rNSyFyqJyTsPC0bu
"""

import json

def load_quiz():
    return [
        {"question": "Welche der folgenden Aussagen zur ANNIS Query Language ist korrekt?",
         "options": [
             "a) ANNIS verwendet ausschließlich reguläre Ausdrücke für Suchabfragen.",
             "b) ANNIS kann nur wortbasierte Abfragen durchführen.",
             "c) ANNIS-Suchabfragen sind sehr einfach.",
             "d) ANNIS ermöglicht die Suche nach syntaktischen Relationen."
         ], "answer": "d"},
        {"question": "Welcher Operator wird in ANNIS verwendet, um nach direkt aufeinanderfolgenden Tokens zu suchen?",
         "options": ["a) .*", "b) .", "c) ->", "d) &"], "answer": "b"},
         {"question": "Warum ist folgende Suchabfrage nicht korrekt? pos=\"ADJA\" & pos=\"NN\"",
         "options": ["a) Es gibt keinen tag ADJA", "b) Der Operator muss gebunden werden", "c) Man darf nicht nach zwei Token auf einer Annotationsebenebene suchen", "d) pos ist keine Annotationsebene"], "answer": "b"},
        {"question": "Was bedeutet die folgende Suchanfrage? pos=\"NN\" & pos=\"VVFIN\" & #1 . #2",
         "options": [
             "a) Ein finites Verb (VVFIN) folgt direkt auf ein Substantiv (NN).",
             "b) Ein Substantiv (NN) steht irgendwo im Satz mit einem finiten Verb (VVFIN) auch irgendwo im Satz.",
             "c) Ein finites Verb (VVFIN) folgt mit einem beliebigen Abstand auf ein Substantiv (NN).",
             "d) Ein Substantiv (NN) wird durch ein finites Verb (VVFIN) dominiert."
         ], "answer": "a"},
        {"question": "Welcher Operator gibt an, dass ein Token ein anderes dominiert?",
         "options": ["a) #1 > #2", "b) #1 . #2", "c) #1 .? #2", "d) #1 & #2"], "answer": "a"},
        {"question": "Welche Abfrage sucht ein Adjektiv (ADJA), das direkt vor einem Substantiv (NN) steht?",
         "options": ["a) pos=\"ADJA\" . pos=\"NN\"", "b) pos=\"ADJA\" & pos=\"NN\"" ,
                     "c) pos=\"ADJA\" > pos=\"NN\"", "d) pos=\"ADJA\" & pos=\"NN\" & #1 -> #2"], "answer": "a"},
    ]

def run_quiz():
    quiz = load_quiz()
    score = 0

    for i, q in enumerate(quiz, start=1):
        print(f"\nFrage {i}: {q['question']}")
        for option in q['options']:
            print(option)

        answer = input("Deine Antwort (a/b/c/d): ").strip().lower()

        if answer == q['answer']:
            print("✅ Richtig!")
            score += 1
        else:
            print(f"❌ Falsch! Die richtige Antwort war: {q['answer']}")

    print(f"\nDu hast {score} von {len(quiz)} Fragen richtig beantwortet!")

if __name__ == "__main__":
    run_quiz()